# Define default target (has to be in the configurations defined below).
# If you use haiku with *no* configuration option like this:
#  haiku -v HelloWorld.java
# then the following configuration is taken:
#
Config = rpi

# Allow some handy user aliases for property values.
#
# e.g.
#  aliases.for.Mode = (HAIKU_16_32 16/32)
# For property 'Mode' with known value 'HAIKU_16_32' set the alias '16/32'. (Map value '16/32' to 'HAIKU_16_32'.)
#
aliases.for.Mode = (HAIKU_16_16 16/16) (HAIKU_16_32 16/32) (HAIKU_32_64 32/64) (HAIKU_32_32 32/32)
aliases.for.Char = (HAIKU_CHAR_8 HAIKU_CHAR_1 1 8) (HAIKU_CHAR_16 HAIKU_CHAR_2 2 16)
aliases.for.Target = (atmega328p ATmega328p ATmega328P) (atmega8) (atmega16) (atmega32) (atmega32u4) (ubuntu) (X86) (arduinoIDE) (h8300) (rpi)
aliases.for.GC = (HAIKU_NoGC) (HAIKU_ConservativGC HAIKU_StopTheWorldGC) (HAIKU_IncrementalGC)



#########################
# Configurations
#########################

# Start with 'root4c' as root of all configurations (where 'root' is a dummy link into hard coded values)
root4c.Extends = root
#root4c.AOTVariant = HAIKU_AOTBytecodeAsSwitch
root4c.AOTVariant = HAIKU_AOTBytecodeAsJump
#root4c.AOTVariant = HAIKU_AOTThreadedAsCall
#root4c.AOTVariant = HAIKU_AOTThreadedAsJump
root4c.Align = 1
root4c.MemorySize = 30000
root4c.InitialMainThreadStackSize = 500
root4c.InitialOtherThreadStackSize = 100
root4c.Mode = 32/64
root4c.Char = 16
root4c.GC = HAIKU_ConservativGC
# IncrementalGCSlice is only used if GC=HAIKU_IncrementalGC
root4c.IncrementalGCSlice = HAIKU_MemorySize/5
root4c.PanicExceptions = NullPointerException | NoSuchMethodError | OutOfMemoryError | ClassCastException | InternalError | ArrayIndexOutOfBoundsException | StackOverflowError | ArithmeticException
root4c.PanicSupport = 0
root4c.Extension = .undefined Extension
# relative to HAIKUVM_HOME/target/<Config>/
root4c.VM_BASE = ../../HaikuVM
# relative to HAIKUVM_HOME/
root4c.HAIKUVM4C = ./haikuVM
root4c.Output = $(HAIKU_APP_NAME)$(HAIKU_EXTENSION)
root4c.CFLAGS =
root4c.CLIBS =
root4c.CXX_OPT = ${HAIKU_CC_OPT}
root4c.LDFLAGS =
root4c.LINKER = $(HAIKU_CXX)
#root4c.MillisPrescale = 64
#root4c.MillisDividend =
#root4c.MillisDivisor =

rpi0.Extends = root4c
rpi0.CPUARCH = armv6zk
rpi0.TUNE = arm1176jzf-s
rpi0.MCU = arm1176jzf-s
rpi0.Lower_MCU = $(subst A,a,$(subst B,b,$(subst C,c,$(subst D,d,$(subst E,e,$(subst F,f,$(subst G,g,$(subst H,h,$(subst I,i,$(subst J,j,$(subst K,k,$(subst L,l,$(subst M,m,$(subst N,n,$(subst O,o,$(subst P,p,$(subst Q,q,$(subst R,r,$(subst S,s,$(subst T,t,$(subst U,u,$(subst V,v,$(subst W,w,$(subst X,x,$(subst Y,y,$(subst Z,z,$(HAIKU_MCU)))))))))))))))))))))))))))
rpi0.FPU=vfp
rpi0.MCU_LD = $(HAIKU_LOWER_MCU).ld
rpi0.Target = rpi
rpi0.MemorySize = 30000
rpi0.MicroKernel = haiku.bcm.lib.HaikuMicroKernelWithConsole
rpi0.InitialMainThreadStackSize = 500
rpi0.InitialOtherThreadStackSize = 100
rpi0.CC = arm-none-eabi-gcc
rpi0.CXX = arm-none-eabi-g++
rpi0.LINKER = arm-none-eabi-gcc
#rpi0.CFLAGS = -DRPI0 -D__$(HAIKU_MCU)__
rpi0.CFLAGS = -DRPI0
rpi0.CC_OPT  = $(HAIKU_CFLAGS) -c -O0 -fno-builtin -funsigned-char -funsigned-bitfields -fomit-frame-pointer -fshort-enums -std=gnu99 -Wall -nostartfiles -march=$(HAIKU_CPUARCH) -mtune=$(HAIKU_TUNE) -mfloat-abi=hard -mfpu=$(HAIKU_FPU) -I'$(HAIKU_APP_BASE)' -I'$(HAIKU_VM_BASE)/src' -I'$(HAIKU_VM_BASE)/src/utility' -o'$@' '$<'
rpi0.CXX_OPT = $(HAIKU_CFLAGS) -c -O0 -fno-builtin -funsigned-char -funsigned-bitfields -fomit-frame-pointer -fshort-enums -fno-exceptions -felide-constructors -nostartfiles -std=gnu++14 -Wno-error=narrowing -fno-rtti -march=$(HAIKU_CPUARCH) -mtune=$(HAIKU_TUNE) -mfloat-abi=hard -mfpu=$(HAIKU_FPU) -fsingle-precision-constant -I'$(HAIKU_APP_BASE)' -I'$(HAIKU_VM_BASE)/src' -I'$(HAIKU_VM_BASE)/src/utility' -o'$@' '$<'
rpi0.LDFLAGS = -O0 -nostartfiles -lstdc++ -Wl,-T,/Users/chuck_benedict/Projects/PiHWBMSimple/rpi.x,--gc-sections,--relax,--defsym=__rtc_localtime=0 -lm -march=$(HAIKU_CPUARCH) -mtune=$(HAIKU_TUNE) -mfloat-abi=hard -mfpu=$(HAIKU_FPU) -fsingle-precision-constant -o'$(HAIKU_APP_NAME).elf' $(OBJS) $(USER_OBJS) $(HAIKU_CLIBS) $(LIBS)
rpi0.Extension = .img
rpi0.Align = 4
rpi0.Mode = 32/32
